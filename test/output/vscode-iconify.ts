// This file is generated by `vscode-ext-gen`. Do not modify manually.
// @see https://github.com/antfu/vscode-ext-gen

// Meta info
export const publisher = "antfu"
export const name = "iconify"
export const version = "0.8.1"
export const displayName = "Iconify IntelliSense"
export const description = "Intelligent Iconify previewing and searching for VS Code"
export const extensionName = `${publisher}.${name}`

/** Type union of all commands */
export type CommandId = 
  | "iconify.toggle-annotations"
  | "iconify.toggle-inplace"
  | "iconify.clear-cache"

/** Commands map registed by `antfu.iconify` */
export const commands = {
  /**
   * Toggle Annotations
   * @value `iconify.toggle-annotations`
   */
  ToggleAnnotations: "iconify.toggle-annotations",
  /**
   * Toggle In-place Mode
   * @value `iconify.toggle-inplace`
   */
  ToggleInplace: "iconify.toggle-inplace",
  /**
   * Clear icon cache
   * @value `iconify.clear-cache`
   */
  ClearCache: "iconify.clear-cache",
} satisfies Record<string, CommandId>

/** Type union of all configurations */
export type ConfigurationId = 
  | "iconify.inplace"
  | "iconify.annotations"
  | "iconify.position"
  | "iconify.color"
  | "iconify.delimiters"
  | "iconify.prefixes"
  | "iconify.suffixes"
  | "iconify.languageIds"
  | "iconify.includes"
  | "iconify.excludes"
  | "iconify.cdnEntry"
  | "iconify.customCollectionJsonPaths"
  | "iconify.customCollectionIdsMap"
  | "iconify.customAliasesJsonPaths"
  | "iconify.customAliasesOnly"

/** Configs map registed by `antfu.iconify` */
export const configurations = {
  /**
   * Use icon graph to replace the icon name.
   * @key `iconify.inplace`
   * @default `true`
   * @type `boolean`
   */
  Inplace: "iconify.inplace",
  /**
   * Enabled Iconify inline annotations
   * @key `iconify.annotations`
   * @default `true`
   * @type `boolean`
   */
  Annotations: "iconify.annotations",
  /**
   * Position the icon before or after the icon name
   * @key `iconify.position`
   * @default `"before"`
   * @type `string`
   */
  Position: "iconify.position",
  /**
   * Icon color hex for inline displaying
   * @key `iconify.color`
   * @default `"auto"`
   * @type `string`
   */
  Color: "iconify.color",
  /**
   * Delimiters for separating between collection id and icon id
   * @key `iconify.delimiters`
   * @default `[":","--","-","/"]`
   * @type `array`
   */
  Delimiters: "iconify.delimiters",
  /**
   * Prefixes for matching
   * @key `iconify.prefixes`
   * @default `["","i-","~icons/"]`
   * @type `array`
   */
  Prefixes: "iconify.prefixes",
  /**
   * Suffixes for matching
   * @key `iconify.suffixes`
   * @default `["","i-"]`
   * @type `array`
   */
  Suffixes: "iconify.suffixes",
  /**
   * Array of language IDs to enable annotations
   * @key `iconify.languageIds`
   * @default `["javascript","javascriptreact","typescript","typescriptreact","vue","svelte","html","pug","json","yaml"]`
   * @type `array`
   */
  LanguageIds: "iconify.languageIds",
  /**
   * Collection IDs to be included for detection
   * @key `iconify.includes`
   * @default `null`
   * @type `array`
   */
  Includes: "iconify.includes",
  /**
   * Collection IDs to be excluded for detection
   * @key `iconify.excludes`
   * @default `null`
   * @type `array`
   */
  Excludes: "iconify.excludes",
  /**
   * CDN entry of iconify icon-sets
   * @key `iconify.cdnEntry`
   * @default `"https://icones.js.org/collections"`
   * @type `string`
   */
  CdnEntry: "iconify.cdnEntry",
  /**
   * JSON paths for custom collection
   * @key `iconify.customCollectionJsonPaths`
   * @default `[]`
   * @type `array`
   */
  CustomCollectionJsonPaths: "iconify.customCollectionJsonPaths",
  /**
   * Collection IDs Map for collection name alias, e.g. { 'mc': 'mingcute' }
   * @key `iconify.customCollectionIdsMap`
   * @default `{}`
   * @type `object`
   */
  CustomCollectionIdsMap: "iconify.customCollectionIdsMap",
  /**
   * JSON paths for custom aliases
   * @key `iconify.customAliasesJsonPaths`
   * @default `[]`
   * @type `array`
   */
  CustomAliasesJsonPaths: "iconify.customAliasesJsonPaths",
  /**
   * Only use the icon aliases. Non aliased icons will be ignored.
   * @key `iconify.customAliasesOnly`
   * @default `false`
   * @type `boolean`
   */
  CustomAliasesOnly: "iconify.customAliasesOnly",
} satisfies Record<string, ConfigurationId>

export const configurationsDefaults = {
  "iconify.inplace": true,
  "iconify.annotations": true,
  "iconify.position": "before",
  "iconify.color": "auto",
  "iconify.delimiters": [":","--","-","/"],
  "iconify.prefixes": ["","i-","~icons/"],
  "iconify.suffixes": ["","i-"],
  "iconify.languageIds": ["javascript","javascriptreact","typescript","typescriptreact","vue","svelte","html","pug","json","yaml"],
  "iconify.includes": null,
  "iconify.excludes": null,
  "iconify.cdnEntry": "https://icones.js.org/collections",
  "iconify.customCollectionJsonPaths": [],
  "iconify.customCollectionIdsMap": {},
  "iconify.customAliasesJsonPaths": [],
  "iconify.customAliasesOnly": false,
} satisfies { [key in ConfigurationId]: ConfigurationTypeMap[key] | null | undefined }

export interface ConfigurationTypeMap {
  "iconify.inplace": boolean,
  "iconify.annotations": boolean,
  "iconify.position": ("before" | "after"),
  "iconify.color": string,
  "iconify.delimiters": string[],
  "iconify.prefixes": string[],
  "iconify.suffixes": string[],
  "iconify.languageIds": string[],
  "iconify.includes": ("academicons" | "akar-icons" | "ant-design" | "arcticons" | "basil" | "bi" | "bitcoin-icons" | "bpmn" | "brandico" | "bx" | "bxl" | "bxs" | "bytesize" | "carbon" | "cbi" | "charm" | "ci" | "cib" | "cif" | "cil" | "circle-flags" | "circum" | "clarity" | "codicon" | "covid" | "cryptocurrency" | "cryptocurrency-color" | "dashicons" | "devicon" | "devicon-plain" | "ei" | "el" | "emojione" | "emojione-monotone" | "emojione-v1" | "entypo" | "entypo-social" | "eos-icons" | "ep" | "et" | "eva" | "f7" | "fa" | "fa-brands" | "fa-regular" | "fa-solid" | "fa6-brands" | "fa6-regular" | "fa6-solid" | "fad" | "fe" | "feather" | "file-icons" | "flag" | "flagpack" | "flat-color-icons" | "flat-ui" | "flowbite" | "fluent" | "fluent-emoji" | "fluent-emoji-flat" | "fluent-emoji-high-contrast" | "fluent-mdl2" | "fontelico" | "fontisto" | "formkit" | "foundation" | "fxemoji" | "gala" | "game-icons" | "geo" | "gg" | "gis" | "gravity-ui" | "gridicons" | "grommet-icons" | "guidance" | "healthicons" | "heroicons" | "heroicons-outline" | "heroicons-solid" | "humbleicons" | "ic" | "icomoon-free" | "icon-park" | "icon-park-outline" | "icon-park-solid" | "icon-park-twotone" | "iconamoon" | "iconoir" | "icons8" | "il" | "ion" | "iwwa" | "jam" | "la" | "lets-icons" | "line-md" | "logos" | "ls" | "lucide" | "mage" | "majesticons" | "maki" | "map" | "marketeq" | "material-symbols" | "material-symbols-light" | "mdi" | "mdi-light" | "medical-icon" | "memory" | "meteocons" | "mi" | "mingcute" | "mono-icons" | "mynaui" | "nimbus" | "nonicons" | "noto" | "noto-v1" | "octicon" | "oi" | "ooui" | "openmoji" | "oui" | "pajamas" | "pepicons" | "pepicons-pencil" | "pepicons-pop" | "pepicons-print" | "ph" | "pixelarticons" | "prime" | "ps" | "quill" | "radix-icons" | "raphael" | "ri" | "si-glyph" | "simple-icons" | "simple-line-icons" | "skill-icons" | "solar" | "streamline" | "streamline-emojis" | "subway" | "svg-spinners" | "system-uicons" | "tabler" | "tdesign" | "teenyicons" | "token" | "token-branded" | "topcoat" | "twemoji" | "typcn" | "uil" | "uim" | "uis" | "uit" | "uiw" | "unjs" | "vaadin" | "vs" | "vscode-icons" | "websymbol" | "whh" | "wi" | "wpf" | "zmdi" | "zondicons")[],
  "iconify.excludes": ("academicons" | "akar-icons" | "ant-design" | "arcticons" | "basil" | "bi" | "bitcoin-icons" | "bpmn" | "brandico" | "bx" | "bxl" | "bxs" | "bytesize" | "carbon" | "cbi" | "charm" | "ci" | "cib" | "cif" | "cil" | "circle-flags" | "circum" | "clarity" | "codicon" | "covid" | "cryptocurrency" | "cryptocurrency-color" | "dashicons" | "devicon" | "devicon-plain" | "ei" | "el" | "emojione" | "emojione-monotone" | "emojione-v1" | "entypo" | "entypo-social" | "eos-icons" | "ep" | "et" | "eva" | "f7" | "fa" | "fa-brands" | "fa-regular" | "fa-solid" | "fa6-brands" | "fa6-regular" | "fa6-solid" | "fad" | "fe" | "feather" | "file-icons" | "flag" | "flagpack" | "flat-color-icons" | "flat-ui" | "flowbite" | "fluent" | "fluent-emoji" | "fluent-emoji-flat" | "fluent-emoji-high-contrast" | "fluent-mdl2" | "fontelico" | "fontisto" | "formkit" | "foundation" | "fxemoji" | "gala" | "game-icons" | "geo" | "gg" | "gis" | "gravity-ui" | "gridicons" | "grommet-icons" | "guidance" | "healthicons" | "heroicons" | "heroicons-outline" | "heroicons-solid" | "humbleicons" | "ic" | "icomoon-free" | "icon-park" | "icon-park-outline" | "icon-park-solid" | "icon-park-twotone" | "iconamoon" | "iconoir" | "icons8" | "il" | "ion" | "iwwa" | "jam" | "la" | "lets-icons" | "line-md" | "logos" | "ls" | "lucide" | "mage" | "majesticons" | "maki" | "map" | "marketeq" | "material-symbols" | "material-symbols-light" | "mdi" | "mdi-light" | "medical-icon" | "memory" | "meteocons" | "mi" | "mingcute" | "mono-icons" | "mynaui" | "nimbus" | "nonicons" | "noto" | "noto-v1" | "octicon" | "oi" | "ooui" | "openmoji" | "oui" | "pajamas" | "pepicons" | "pepicons-pencil" | "pepicons-pop" | "pepicons-print" | "ph" | "pixelarticons" | "prime" | "ps" | "quill" | "radix-icons" | "raphael" | "ri" | "si-glyph" | "simple-icons" | "simple-line-icons" | "skill-icons" | "solar" | "streamline" | "streamline-emojis" | "subway" | "svg-spinners" | "system-uicons" | "tabler" | "tdesign" | "teenyicons" | "token" | "token-branded" | "topcoat" | "twemoji" | "typcn" | "uil" | "uim" | "uis" | "uit" | "uiw" | "unjs" | "vaadin" | "vs" | "vscode-icons" | "websymbol" | "whh" | "wi" | "wpf" | "zmdi" | "zondicons")[],
  "iconify.cdnEntry": string,
  "iconify.customCollectionJsonPaths": string[],
  "iconify.customCollectionIdsMap": Record<string, unknown>,
  "iconify.customAliasesJsonPaths": string[],
  "iconify.customAliasesOnly": boolean,
}
